/* eslint-disable @typescript-eslint/no-explicit-any */
import { Create, useForm } from "@refinedev/antd";
import { Form, Input, message, Select, Spin } from "antd";
import { IQuickChat } from "../../interface/conversation";
import Loader from "../../utils/loading";

const QuickChatCreate = () => {
  const { formProps, saveButtonProps, formLoading } = useForm<IQuickChat>({
    successNotification: () => ({
      message: "üéâ C·∫≠p nh·∫≠t th√†nh c√¥ng",
      description: "Tin nh·∫Øn ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!",
      type: "success" as const,
    }),
    errorNotification: (error: any) => ({
      message: "‚ùå C·∫≠p nh·∫≠t th·∫•t b·∫°i! " + error.response?.data?.error,
      description: "C√≥ l·ªói x·∫£y ra trong qu√° tr√¨nh x·ª≠ l√Ω.",
      type: "error" as const,
    }),
  });

  const categoryOption = [
    { value: 1, label: "Chung" },
    { value: 2, label: "ƒê∆°n h√†ng" },
    { value: 3, label: "Thanh to√°n" },
    { value: 4, label: "V·∫≠n chuy·ªÉn" },
    { value: 5, label: "H√≥a ƒë∆°n" },
    { value: 6, label: "Kh√°c" },
  ];

  return (
    <Create
      title="T·∫°o tin nh·∫Øn nhanh"
      saveButtonProps={saveButtonProps}
      isLoading={false}
    >
      <Spin spinning={formLoading} indicator={<Loader />}>
        <Form
          {...formProps}
          layout="vertical"
          onFinish={async (values: any) => {
            try {
              if (values.content && typeof values.content === "string") {
                values.content = values.content.trim();
              }
              await formProps.onFinish?.(values);
            } catch (error: any) {
              message.error("C√≥ l·ªói x·∫£y ra trong qu√° tr√¨nh x·ª≠ l√Ω");
            }
          }}
        >
          <Form.Item
            label="N·ªôi dung tin nh·∫Øn"
            name={["content"]}
            rules={[
              { required: true, message: "Vui l√≤ng nh·∫≠p n·ªôi dung tin nh·∫Øn" },
              { min: 3, message: "N·ªôi dung ph·∫£i c√≥ √≠t nh·∫•t 3 k√Ω t·ª±" },
              { max: 500, message: "N·ªôi dung kh√¥ng v∆∞·ª£t qu√° 200 k√Ω t·ª±" },
            ]}
          >
            <Input.TextArea />
          </Form.Item>
          <Form.Item
            label="Danh m·ª•c"
            name={["category"]}
            rules={[{ required: true, message: "Vui l√≤ng ch·ªçn danh m·ª•c" }]}
          >
            <Select options={categoryOption} />
          </Form.Item>
        </Form>
      </Spin>
    </Create>
  );
};

export default QuickChatCreate;
